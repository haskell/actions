name: Setup
on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

defaults:
  run:
    working-directory: setup

jobs:
  test:
    name: Unit Tests - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "12"
      - run: npm ci --prefer-offline --no-audit --progress=false
      - run: npm test

  install-haskell:
    name: GHC ${{ matrix.ghc }}, Cabal ${{ matrix.cabal }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        ghc: ["latest", "8.4.4"]
        cabal: ["latest", "3.2.0.0", "3.4.0.0"]
        include:
          - os: ubuntu-latest
            ghc: "7.10.3"
            cabal: "3.0.0.0"
          - os: ubuntu-latest
            ghc: "8.2.2"
            cabal: "2.4.0.1"
    steps:
      - uses: actions/checkout@v2
      - uses: ./setup
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}
      - name: Test runghc
        run: |
          runghc --version
          runghc __tests__/hello.hs
      - name: Build test project
        working-directory: setup/__tests__/project
        run: cabal build
      - name: Run test project
        working-directory: setup/__tests__/project
        run: cabal run
      - name: Show installed versions
        run: |
          cabal --version
          ghc --version
      - name: Confirm installed and expected versions match
        shell: bash
        # this check depends on the ghc versions being "exact" in the matrix
        if: "matrix.ghc != 'latest'"
        # pure bash startsWith
        run: |
          [[ "${{ matrix.cabal }}" =~ ^([0-9]+\.[0-9]+)\. ]] && ver="${BASH_REMATCH[1]}"
          [[ "$(cabal --numeric-version)" =~ ^"$ver" ]]
          [[ "$(ghc --numeric-version)" == "${{ matrix.ghc }}" ]]

  test-fallback:
    name: Test GHC Installation Fallbacks - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: ./setup
        with:
          ghc-version: 8.21.5
      - name: Ensure failed
        if: failure()
        run: |
          echo "ghc 8.21.5 failed to install, which is expected"

  install-stack:
    name: Stack ${{ matrix.stack }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        stack: ["latest", "1.9.1"]

    steps:
      - uses: actions/checkout@v2
      - uses: ./setup
        with:
          enable-stack: true
          stack-no-global: true
          stack-version: ${{ matrix.stack }}
      - run: |
          stack --version
          stack
